/* Class = "NSTableColumn"; headerCell.title = "String[TableId]/Number[Length]"; ObjectID = "2TV-zh-dka"; */
"2TV-zh-dka.headerCell.title" = "문자 [테이블 ID] | 번호 [길이]";

/* Class = "NSTableColumn"; headerToolTip = "String[TableId]/Number[Length]"; ObjectID = "2TV-zh-dka"; */
"2TV-zh-dka.headerToolTip" = "문자 [테이블 ID] | 번호 [길이]";

/* Class = "NSButton"; ibShadowedToolTip = "<key>DropOem</key>\n<true/>\nDrops all internal SSDT tables to avoid conflicts when generating an SSDT for your processor, which contains P- and C-States. Clover can do this automatically or you can specify an external file, which will be loaded from EFI/OEM/[model]/ACPI/patched."; ObjectID = "3OB-Qg-u2B"; */
"3OB-Qg-u2B.ibShadowedToolTip" = "<key>DropOem</key>
<true/>
P 및 C 상태가 포함 된 프로세서용 SSDT를 생성할 때 충돌을 피하기 위해 모든 내부 SSDT 테이블을 삭제합니다 클로버는 이 작업을 자동으로 수행 할 수도 있고 EFI/OEM/[model]/ACPI/patched에서 로드 할 외부 파일을 지정할 수도 있습니다 하지만 테이블 아이디를 입력하지 않고 patched 폴더에 SSDT파일이 있을 경우 자동으로 로드됩니다";

/* Class = "NSButton"; ibShadowedToolTip = "Renames device AC0 to ADP1."; ObjectID = "4L0-lZ-ZbZ"; */
"4L0-lZ-ZbZ.ibShadowedToolTip" = "장치 AC0에서 ADP1으로 이름을 바꿉니다";

/* Class = "NSButton"; ibShadowedToolTip = "This device is used for IntelHDxxxx graphics. \nThis is required when using the FakeID->IMEI bit. \nIt does nothing on Core 2 systems."; ObjectID = "5cK-Vm-6vG"; */
"5cK-Vm-6vG.ibShadowedToolTip" = "이 장치는 IntelHDxxxx 그래픽에 사용됩니다
이 것은 은 FakeID > IMEI 비트를 사용할 때 필요합니다
이는 코어 2 시스템에서는 동작하지 않습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Provide a set of corrections to DSDT to make your system \"Darwin\"\nto be identified as \"Windows 2001\", like most ACPI systems. \nMore ACPI devices will work in this mode."; ObjectID = "7fD-EQ-f6e"; */
"7fD-EQ-f6e.ibShadowedToolTip" = "시스템을 “Darwin”으로 만들기 위해 DSDT에 대한 일련의 수정 사항을 기재해 주세요
대부분의 ACPI 시스템과 마찬가지로 “Windows 2001”로 식별됩니다
더 많은 ACPI 장치가 이 모드에서 작동합니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>SlpSmiAtWake</key>\n<true>\nIt adds SLP_SMI_EN=0 at every wake. It may help solve sleep and shutdown issues on UEFI boot."; ObjectID = "7Md-lK-CZ9"; */
"7Md-lK-CZ9.ibShadowedToolTip" = "<key>SlpSmiAtWake</key>
<true>
UEFI 부팅 시 절전및 종료 문제를 해결하는데 도움이 될 수있는 키 값이며 컴퓨터가 깨어날 때마다 SLP_SMI_EN=0을 추가합니다";

/* Class = "NSButton"; ibShadowedToolTip = "Inserts plugin-type One to CpuPm SSDT"; ObjectID = "07p-TL-NPT"; */
"07p-TL-NPT.ibShadowedToolTip" = "플러그인 유형 1을 CpuPm SSDT로 인젝션 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "Name ACST is used differently by Apple and ASUS. \nFor ASUS it's the AC adapter state, but for Apple it's\n a replacement for _CST, c-states table. \nTo avoid conflict it is necessary to rename such function to something else."; ObjectID = "9LT-be-eqr"; */
"9LT-be-eqr.ibShadowedToolTip" = "ACST 네임은 Apple과 ASUS에서 다르게 사용됩니다
ASUS의 경우 AC 어댑터 상태이지만 Apple의 경우
 _CST, c-states 테이블을 대신합니다.
충돌을 피하려면 해당 함수의 이름을 다른 것으로 변경해 주세";

/* Class = "NSButton"; ibShadowedToolTip = "<key>SuspendOverride</key>\n<true>\nInfluences the DSDT patch FixShutdown_0004 and extends the fix from state 5 to 3, 4 and 5 (sleep and suspend)."; ObjectID = "82W-UW-8aK"; */
"82W-UW-8aK.ibShadowedToolTip" = "<key>SuspendOverride</key>
<true>
DSDT 패치를 통해 FixShutdown_0004에 영향을 미치고 절전모드 5에서 3, 4 및 5 (절전 및 일시 중단)로 교정을 확장합니다";

/* Class = "NSButton"; ibShadowedToolTip = "Only patches the \"Darwin OS\" identification."; ObjectID = "a85-0W-IoZ"; */
"a85-0W-IoZ.ibShadowedToolTip" = "“Darwin OS”만을 식별하는 패치 입니다";

/* Class = "NSButton"; ibShadowedToolTip = "Injects device and properties for the WiFi controller. \nAlso made FakeID for some known substitutions."; ObjectID = "Aib-Xz-XYs"; */
"Aib-Xz-XYs.ibShadowedToolTip" = "WiFi 컨트롤러의 장치 및 속성을 주입합니다
또한 알려진 대체물을 위해 FakeID를 만들어졌습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Excludes IRQ(0) from RTC device."; ObjectID = "AOU-P1-GqP"; */
"AOU-P1-GqP.ibShadowedToolTip" = "RTC 장치에서 IRQ (0)을 제외합니다";

/* Class = "NSTableView"; ibShadowedToolTip = "Binary DSDT patching\n\n<key>Patches</key>\n  <array>\n    <dict>\n      <key>Find</key>\n      <data>W4IeQkFUMQhfSElEDEHQDAoIX1VJRAEUCF9TVEEApAA=</data>\n      <key>Replace</key>\n      <data></data>\n    </dict>\n    <dict>\n      <key>Find</key>\n      <data>UFhTWAhfQURSAAhfUFJXEgYC</data>\n      <key>Replace</key>\n      <data>UFhTWAhfQURSAAhfU1VOCgQIX1BSVxIGAg==</data>\n    </dict>\n  </array>"; ObjectID = "ar5-MC-CKJ"; */
"ar5-MC-CKJ.ibShadowedToolTip" = "바이너리 DSDT 패치

<key>Patches</key>
  <array>
    <dict>
      <key>Find</key>
      <data>W4IeQkFUMQhfSElEDEHQDAoIX1VJRAEUCF9TVEEApAA=</data>
      <key>Replace</key>
      <data></data>
    </dict>
    <dict>
      <key>Find</key>
      <data>UFhTWAhfQURSAAhfUFJXEgYC</data>
      <key>Replace</key>
      <data>UFhTWAhfQURSAAhfU1VOCgQIX1BSVxIGAg==</data>
    </dict>
  </array>";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Generate</key>\n<dict>\n  <key>PStates</key>\n  <true/>\n</dict>\nAutomatic SSDT table generation, which extends the processor section with _PPC, _PPC and _PSS methods.\n\n_PCT - Performance control. Controls SpeedStep functions\n_PPC - Performance Present Capabilities. SpeedStep capabilities. This method returns a value limiting the frequency. Look further for PLimitDict.\n_PSS - Performance Supported States. An array containing possible CPU states - P-States.\nPLimitDict, UnderVoltStep and Turbo will be taken into consideration when generated this array."; ObjectID = "bdA-kb-5za"; */
"bdA-kb-5za.ibShadowedToolTip" = "<key>Generate</key>
<dict>
  <key>PStates</key>
  <true/>
</dict>
_PPC, _PPC 및 _PSS 메소드로 프로세서 섹션을 확장하는 자동 SSDT 테이블 생성 입니다

_PCT - 성능 제어. SpeedStep 기능 제어
_PPC - 성과 제시 능력. SpeedStep 기능. 이 메서드는 빈도를 제한하는 값을 반환 합니다 PLimitDict를 더 살펴보십시오.
_PSS - 성능 지원 상태. 가능한 CPU 상태 (P-States)를 포함한 배열
이 배열이 생성되면 PLimitDict, UnderVoltStep 및 Turbo가 고려 됩니다";

/* Class = "NSButton"; ibShadowedToolTip = "Key UseSystemIO at SSDT section will serve to choose in the generated _CST tables between:\n\nRegister (FFixedHW,\nRegister (SystemIO,"; ObjectID = "cbd-3A-zqo"; */
"cbd-3A-zqo.ibShadowedToolTip" = "SSDT 섹션의 키 UseSystemIO는 다음 사이에서 생성 된 _CST 테이블을 선택하는 역할을 합니다

Register (FFixedHW,
Register (SystemIO,";

/* Class = "NSButton"; ibShadowedToolTip = "This is a very functional patch for video devices. \nRecommended even if you don't want to inject properties to the device.\n When this bit is set other settings like FakeID will be applied as well."; ObjectID = "dff-je-gcc"; */
"dff-je-gcc.ibShadowedToolTip" = "이것은 비디오 장치를위한 매우 기능적인 패치 입니다
장치에 속성을 인젝션 하지 않으려는 경우에도 권장됩니다
이 비트가 설정되면 FakeID와 같은 다른 설정도 적용 됩니다";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>MaxMultiplier</key>\n<integer>30</integer>\nIntroduces as an analogy to the minimal multiplier but not really necessary. It is not advised to set it."; ObjectID = "ecf-V5-wTF"; */
"ecf-V5-wTF.ibShadowedToolTip" = "<key>MaxMultiplier</key>
<integer>30</integer>
최소 배수에 대한 비유로 소개 하지만 실제로는 필요하지는 않습니다 설정하지 않는 것이 좋습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Helps enable SpeedStep on Ivy Bridge+ systems."; ObjectID = "fUT-Un-eDT"; */
"fUT-Un-eDT.ibShadowedToolTip" = "Ivy Bridge 이상 시스템에서 스피드스텝을 활성화하는 데 도움이 됩니다";

/* Class = "NSButton"; ibShadowedToolTip = "AutoMerge feature for merging/replacement of SSDTs (or other AMLs) by content in ACPI/patched\n \nBy setting config.plist/ACPI/AutoMerge=true (default is false to retain old behavior), content in ACPI/patched will attempt to be matched against native bits referred to by the XSDT.  Much like how DSDT.aml placed in ACPI/patched *replaces* native DSDT, you can use this feature to replace SSDTs (or other tables) automatically without using DropTables, or DropOem. More importantly, the relative order of the tables is retained.  It means you can replace only a single table without resorting to DropOem=true and SortedOrder (which implies placing all SSDTs in ACPI/patched). \n \nThe matching is based on file name and OemTableID/signature.\n \nFor SSDTs, the number in the file name is used to find the index in XSDT.  So, a file named SSDT-5.aml in ACPI/patched will replace the 6th SSDT in XSDT (because SSDTs extracted start at SSDT-0.aml).  Additional checking is done with regard to the OEM table ID, to avoid obvious mistakes (eg. placing an SSDT-x.aml that is not a patched SSDT, or mixing up the naming/numbering of the SSDTs in ACPI/patched).\n \nWith the change to dynamic SSDT extraction file names (above) and this change, it means you can take any SSDT that was extracted, patch it, and place in ACPI/patched, and without making changes to DropOem or DropTables (or using SortedOrder) it will replace the original SSDT with the patched version, retaining SSDT order.  In other words, Clover does the right thing with AutoMerge=true, contrary to what it does by default.\n \nThis setting also affects how config.plist/ACPI/DSDT/Patches are treated.  Normally, such patches do not apply to SSDTs.  But with AutoMerge=true, such patches are now applied to patched OEM SSDTs in ACPI/patched.  Still, add-on SSDTs (eg. those that didn't match existing tables in XSDT), are not affected by ACPI/DSDT/Patches.  It means that no major surprises happen when you place a patched SSDTs in ACPI/patched.\n \nThe default of AutoMerge is false, so it is a feature you must explicitly select.<array>\n    <string>toBeDisabled.aml</string>\n    <string>toBeDisabled2.aml</string>\n    ...\n</array>"; ObjectID = "fYz-Cp-2LJ"; */
"fYz-Cp-2LJ.ibShadowedToolTip" = "SSDT (또는 다른 AML)를 ACPI / 패치 된 내용으로 병합 / 대체하기위한 자동 병합 기능
 
Config.plist / ACPI / 자동병합 = true (이전 동작을 유지하려면 기본값은 false)를 설정하면 ACPI / patched의 내용이 XSDT가 참조하는 기본 비트와 일치하도록 시도 합니다 DSDT.aml이 ACPI / 패치*된 에서 네이티브 DSDT를 대체하는 것과 마찬가지로 드랍테이블 또는 드랍Oem을 사용하지 않고이 기능을 사용하여 SSDT (또는 다른 테이블)를 자동으로 바꿀 수 있습니다 더 중요한 것은 테이블의 상대적 순서가 유지된다는 것 입니다 즉, 드랍Oem = true 및 정렬된 오더 (모든 SSDT를 ACPI / 패치 됨)에 의지하지 않고 단일 테이블 만 바꿀 수 있음을 의미 합니다
 
일치하는 파일 이름과 Oem 테이블 ID / 서명을 기반으로 합니다
 
SSDT의 경우 파일 이름의 x 호가 XSDT에서 색인을 찾는 데 사용 됩니다 따라서 ACPI/PATCHES 된 SSDT-5.aml이라는 파일은 XSDT의 여섯 번째 SSDT를 대체 합니다 (SSDT가 SSDT-0.aml에서 시작되기 때문에) 분명한 실수 (예 : 패치 된 SSDT가 아닌 SSDT-x.aml 배치 또는 ACPI/PATCHES 된 SSDT의 명명 / 번호 매기기 혼합)를 피하기 위해 OEM 테이블 ID와 관련하여 추가 검사가 수행 됩니다
 
동적 SSDT 추출 파일 이름 변경 (위)과이 변경을 통해 추출한 SSDT를 패치하고 패치하고 ACO / 패치 된 SSDT를 DropOem 또는 DropTables (또는 정렬된 오더를 사용)를 사용하지 않고 가져올 수 있음을 의미 합니다 원래의 SSDT를 패치 된 버전으로 대체하여 SSDT 순서를 유지 합니다 다시 말해서, 클로버는 기본적으로 자동병합 = true와 반대로 자동병합 = true를 사용하여 올바른 작업을 수행 합니다
 
이 설정은 config.plist/ACPI/DSDT/Patches를 처리하는 방법에도 영향을 미칩니다 일반적으로 이러한 패치는 SSDT에는 적용되지 않습니다 그러나 자동병합 = true로 설정하면 이러한 패치가 ACPI / 패치 된 패치 된 OEM SSDT에 적용 됩니다 여전히 추가 SSDT (예 : XSDT의 기존 테이블과 일치하지 않는 SSDT)는 ACPI/DSDT/PATCHES의 영향을받지 않습니다 즉, 패치 된 SSDT를 ACPI/PACTHCES 된 상태로두면 큰 놀라움이 없을 것 입니다
 
자동병합의 기본 값은 false이므로 명시 적으로 선택 해야하는 기능입니다";

/* Class = "NSButton"; ibShadowedToolTip = "New way to patch an IntelGFX device."; ObjectID = "gaI-9R-Lhu"; */
"gaI-9R-Lhu.ibShadowedToolTip" = "IntelGFX 장치를 패치하는 새로운 방법";

/* Class = "NSButton"; ibShadowedToolTip = "<key>EnableC4</key>\n<true/>\nThis key allows you to enable the C4 states generator. Disabled by default."; ObjectID = "hkD-Lc-e2c"; */
"hkD-Lc-e2c.ibShadowedToolTip" = "<key>EnableC4</key>
<true/>
이 키를 사용하면 C4 상태 생성기를 활성화 할 수 있습니다 기본적으로 사용하지 않도록 설정되어 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Fix non-ascii characters in ACPI tables headers."; ObjectID = "hSy-Jr-ymP"; */
"hSy-Jr-ymP.ibShadowedToolTip" = "ACPI 테이블 헤더의 Non-ASCII 문자를 수정 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "Enable or disable fix on MCFG table, disabled by default."; ObjectID = "hTw-Km-4Vm"; */
"hTw-Km-4Vm.ibShadowedToolTip" = "MCFG 테이블에서 수정을 사용 또는 사용하지 않도록 설정 합니다 (기본적으로 사용하지 않도록 설정 됨)";

/* Class = "NSButton"; ibShadowedToolTip = "If you see in system log:\n\nAppleLPC::notifyPlatformASPM - registering with plugin with ASPM Support false\n\nThe message will gone and macOS works smoother.\nWhy? This is FADT->Flags bit 4.\nIf set, indicates to OSPM that it must not enable OSPM ASPM control on this platform.\nYes, macOS can't control hackintosh hardware ASPM. (OSPM = OS Power Management)"; ObjectID = "iCt-FQ-aaj"; */
"iCt-FQ-aaj.ibShadowedToolTip" = "시스템 로그에 다음과 같이 표시되는 경우

AppleLPC :: notifyPlatformASPM - ASPM을 사용하여 플러그인으로 등록 지원

메시지가 사라지고 macOS가 원활하게 작동 합니다
이것은 FADT-> Flags 비트 4이기 때문입니다
설정된 경우 OSPM에이 플랫폼에서 OSPM ASPM 제어를 활성화하지 않아야 함을 나타냅니다
ex) macOS는 hackintosh 하드웨어 ASPM을 제어 할 수 없습니다 (OSPM = OS 전원 관리)";

/* Class = "NSButton"; ibShadowedToolTip = "Injects the DeviceID from ICH6 to prevent the orange icons problem. \nNowadays this patch looks to be obsolete. \nIt is better to do the kext binary patch instead."; ObjectID = "jcL-Td-68d"; */
"jcL-Td-68d.ibShadowedToolTip" = "주황색 아이콘 문제를 방지하기 위해 ICH6에서 DeviceID를 주입 합니다
요즘이 패치는 불 필요한  것 같습니다
대신 Kext 바이너리 패치를하는 것이 좋습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Adds device MCHC to DSDT. For H61M this is obligatory, else KP."; ObjectID = "Jds-ye-0B2"; */
"Jds-ye-0B2.ibShadowedToolTip" = "장치 MCHC를 DSDT에 추가 합니다 H61M의 경우 이것은 의무 사항이며, 그렇지 않은 경우 커널 패닉이 발생합니다";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>ResetAddress</key>\n<string>0x0CF9</string>\n\nand the below\n\n<key>ResetValue</key>\n<string>0x06</string>\n\n\nThese two parameters serve a very important purpose: to fix restart. \nThese values theoretically should be in the FADT table, but it is not always the case. \nFurthermore, FADT may be shorter than required and not contain them at all. \nDefault values are 0x64/0xFE, which means a restart through the PS2 controller.\nHowever, this does not work on every system and you can alternatively use 0x0CF9/0x06, \nwhich indicates a restart though the PCI rail. \nThis is the default value for real Macs but does not always work on a hackintosh. \nThe difference is clear: a hackintosh additionally has a PS2 controller, \nwhich may prevent rebooting, if not disabled.\nLast but not least you can set them to 0x0/0x0 to allow the use of default FACP values. \nIf not present, the default values states above will be used instead."; ObjectID = "Jga-JJ-yis"; */
"Jga-JJ-yis.ibShadowedToolTip" = "<key>ResetAddress</key>
<string>0x0CF9</string>
과
<key>ResetValue</key>
<string>0x06</string>


이 두 매개 변수는 다시 시작을 수정하는 매우 중요한 용도로 사용 됩니다
이 값은 이론적으로 FADT 테이블에 있어야하지만 항상 그런 것은 아닙니다
또한, FADT는 요구되는 것보다 짧을 수 있고 전혀 포함하지 않을 수도 있습니다
기본값은 0x64 / 0xFE이며 이는 PS2 컨트롤러를 통해 다시 시작 함을 의미 합니다
그러나 이것은 모든 시스템에서 작동하지 않으며 0x0CF9 / 0x06을 대신 사용할 수 있습니다
이는 PCI 레일을 통한 재시작을 나타냅니다
이것은 실제 Mac의 기본값이지만 해킨토시에서는 항상 작동하지 않습니다
그 차이점은 분명합니다. hackintosh에는 PS2 컨트롤러가 추가로 있습니다
비활성화되지 않은 경우 재부팅을 방지 할 수 있습니다
마지막으로 중요한 FACP 값을 사용할 수 있도록 0x0 / 0x0로 설정할 수 있습니다
존재하지 않을 경우 위의 기본값을 대신 사용합니다";

/* Class = "NSComboBox"; ibShadowedToolTip = "<key>PLimitDict</key>\n<string>1</string>\nLimits the maximal CPU frequency.\n\n0 - No limit.\n1 - Reduce frequency by one step\n2 - Reduce frequency by two steps\nExample: A Core2Duo T8300 with 2400 MHz operates at a maximal frequency of 2000 MHz when limited by two steps. This parameter might be used to reduce heat in mobile systems.\n\nThe same parameter exists in platform plists, for example in: System/Library/Extensions/IOPlaEormPluginFamily.kext/Contents/PlugIns/ACPI_SMC_PlaEormPlugin.kext/Conte nts/Resources/MacBook5_1.plist.\nThey will be discussed later.\n\nOther CPUs may need other values. This value has a reversed effect on a Core2Quad for instance. The optimal value is 1 in this case. It may be a DSDT error, though."; ObjectID = "jwH-TR-qrW"; */
"jwH-TR-qrW.ibShadowedToolTip" = "<key> PLimitDict </ key>
<string> 1 </ string>
최대 CPU 빈도를 제한 합니다

0 - 제한 없음
1 - 주파수를 한 단계 낮춤
2 - 주파수를 두 단계로 낮춤
예 : 2400 MHz의 Core2Duo T8300은 두 단계로 제한 될 때 최대 주파수가 2000 MHz에서 작동 합니다 이 매개 변수는 모바일 시스템의 열을 줄이기 위해 사용될 수 있습니다

동일한 매개 변수가 플랫폼 plists에 있습니다 (예 : System/Library/Extensions/IOPlaEormPluginFamily.kext/Contents/PlugIns/ACPI_SMC_PlaEormPlugin.kext/Conte nts/Resources/MacBook5_1.plist
그것들은 나중에 논의 될 것입니다

다른 CPU에는 다른 값이 필요할 수 있습니다 이 값은 예를 들어 Core2Quad에서 역효과를 냅니다 이 경우 최적 값은 1입니다 DSDT 오류 일 수 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Patch for the FATD table to fix restart problems."; ObjectID = "Klz-ag-dZN"; */
"Klz-ag-dZN.ibShadowedToolTip" = "재시작 문제를 수정하기위한 FATD 테이블에 대한 패치";

/* Class = "NSButton"; ibShadowedToolTip = "Adds Return(Package(0)) into method _WAK if absent. \nThis patch eliminates a warning, but we don't know if it \naffects anything else on a working system."; ObjectID = "KQC-r6-auD"; */
"KQC-r6-auD.ibShadowedToolTip" = "_WAK 메서드가 없을 경우 _WAK 메서드에 Return (Package (0))을 추가합니다
이 패치는 경고를 없애지 만,
작업 시스템의 다른 모든 것에 영향을 미칩니다";

/* Class = "NSButton"; ibShadowedToolTip = "Injects device and properties for the LAN controller.\nAlso made FakeID for some known substitutions."; ObjectID = "KqL-hQ-cAE"; */
"KqL-hQ-cAE.ibShadowedToolTip" = "LAN 컨트롤러의 장치 및 속성을 주입 합니다
또한 알려진 대체물을 위해 FakeID를 만들어졌습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Adds IRQ(0, 8, 11) to device HPET. Obligatory for OSX <= 10.8,\nMavericks can work without it."; ObjectID = "Lel-Vs-BsK"; */
"Lel-Vs-BsK.ibShadowedToolTip" = "장치 HPET에 IRQ (0, 8, 11)를 추가합니다. OSX <- 10.8의 경우 필수,
매버릭스는 그것 없이도 일할 수 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Inserts APLF to CpuPm SSDT"; ObjectID = "Ljr-1u-hzE"; */
"Ljr-1u-hzE.ibShadowedToolTip" = "CpuPm SSDT에 APLF를 인젝션 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "Changes the device-id for the LPC chipset device. \nNeeded in very rare cases for non-standard (for Apple) chipsets, like ICH9."; ObjectID = "lTv-ds-RYE"; */
"lTv-ds-RYE.ibShadowedToolTip" = "LPC 칩셋 장치의 device-id를 변경 합니다
매우 드물게 ICH9와 같은 비표준 (Apple용) 칩셋에 필요 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "Adds SMBUS device into DSDT, with some sub-device. \nI don't know the reason for the patch but it's advised in many forums. \nNever seen any problem with this bit."; ObjectID = "LV7-fj-m5P"; */
"LV7-fj-m5P.ibShadowedToolTip" = "일부 하위 장치가있는 SMBUS 장치를 DSDT에 추가 합니다
Mackie100은 이 패치에 대한 이유를 모르지만 많은 포럼에서 조언을 듣고 있답니다
아무튼 이 “비트”에는 전혀 문제가 없습니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Debug</key>\n<true/>\n\nEnable the debug logs of DSDT section."; ObjectID = "mcq-U0-L7F"; */
"mcq-U0-L7F.ibShadowedToolTip" = "<key>Debug</key>
<true/>

DSDT 섹션의 디버그 로그를 활성화 합니다";

/* Class = "NSComboBox"; ibShadowedToolTip = "<key>UnderVoltStep</key>\n<string>1</string>\nThis parameter lowers the CPU voltage and indirectly affects the temperature. Possible values are 0, 1, 2, etc. Clover will only allow sane values, meaning it is safe to increase this value until the CPU stops working correctly."; ObjectID = "MDY-R1-Hlx"; */
"MDY-R1-Hlx.ibShadowedToolTip" = "<key>UnderVoltStep</key>
<string>1</string>
이 매개 변수는 CPU 전압을 낮추고 간접적으로 온도에 영향을 미칩니다 설정 가능한 값은 0, 1, 2 등입니다. 클로버는 정상적인 값만 허용하므로 CPU가 올바르게 작동하지 않을 때까지 이 값을 늘리는 것이 안전 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>DropOEM_DSM</key>\n<true/>\nSome OEM DSDT already contains Method(_DSM...) for some devices. It has another structure, another logic, and another results then we need. But we can't modify this method, and we can't create own method with the same name, so DropOEM_DSM was created to drop these OEM _DSM.\n\nDefault value is false if using a custom DSDT and true if using BIOS.aml.\n\nAlternatively if you only need to drop the _DSM for certain devices, you can select any of these individually:\n\n<key>DropOEM_DSM</key>\n<dict>\n\t<key>ATI</key>\n\t<true/>\n\t<key>Firewire</key>\n\t<true/>\n\t<key>HDA</key>\n\t<true/>\n\t<key>HDMI</key>\n\t<true/>\n\t<key>IDE</key>\n\t<true/>\n\t<key>IntelGFX</key>\n\t<true/>\n\t<key>LAN</key>\n\t<true/>\n\t<key>LPC</key>\n\t<true/>\n\t<key>NVidia</key>\n\t<true/>\n\t<key>SATA</key>\n\t<true/>\n\t<key>SmBUS</key>\n\t<true/>\n\t<key>USB</key>\n\t<true/>\n\t<key>WIFI</key>\n\t<true/>\n</dict>"; ObjectID = "N1p-Js-JqA"; */
"N1p-Js-JqA.ibShadowedToolTip" = "<key>DropOEM_DSM</key>
<true/>
S일부 OEM DSDT에는 일부 장치에 대한 메서드 (_DSM …)가 이미 있습니다. 그것은 또 다른 구조, 또 다른 논리와 또 다른 결과를 필요로합니다. 그러나 우리는이 방법을 수정할 수 없으며 동일한 이름을 가진 자체 메서드를 생성 할 수 없으므로 DropOEM_DSM이 이러한 OEM _DSM을 삭제하도록 작성 되었습니다

사용자 정의 DSDT를 사용하는 경우 기본 값은 BIOS이고 BIOS.aml을 사용할 경우 기본값입니다

또는 특정 장치에 대해 _DSM 만 삭제해야하는 경우 개별적으로 다음 중 하나를 선택할 수 있습니다

<key>DropOEM_DSM</key>
<dict>
	<key>ATI</key>
	<true/>
	<key>Firewire</key>
	<true/>
	<key>HDA</key>
	<true/>
	<key>HDMI</key>
	<true/>
	<key>IDE</key>
	<true/>
	<key>IntelGFX</key>
	<true/>
	<key>LAN</key>
	<true/>
	<key>LPC</key>
	<true/>
	<key>NVidia</key>
	<true/>
	<key>SATA</key>
	<true/>
	<key>SmBUS</key>
	<true/>
	<key>USB</key>
	<true/>
	<key>WIFI</key>
	<true/>
</dict>";

/* Class = "CocoaBindingsConnection"; ibShadowedIsNilPlaceholder = "hex or number"; ObjectID = "nRn-bw-I6o"; */
"nRn-bw-I6o.ibShadowedIsNilPlaceholder" = "16진수 또는 숫자";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>C3Latency</key>\n<integer>250</integer>\n\nor also\n\n<key>C3Latency</key>\n<string>0xFA</string>\n\nC3 states latency. You know what to do.. value above is for example."; ObjectID = "NUp-0c-FOE"; */
"NUp-0c-FOE.ibShadowedToolTip" = "<key> C3Latency </ key>
<key>C3Latency</key>
<integer>250</integer>

또는

<key>C3Latency</key>
<string>0xFA</string>

C3는 대기 시간을 나타냅니다 당신은 무엇을 해야할지 압니다 위의 값은 예를 들어 있습니다";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>ResetValue</key>\n<string>0x06</string>\n\nand the below\n\n<key>ResetAddress</key>\n<string>0x0CF9</string>\n\n\nThese two parameters serve a very important purpose: to fix restart. \nThese values theoretically should be in the FADT table, but it is not always the case. \nFurthermore, FADT may be shorter than required and not contain them at all. \nDefault values are 0x64/0xFE, which means a restart through the PS2 controller.\nHowever, this does not work on every system and you can alternatively use 0x0CF9/0x06, \nwhich indicates a restart though the PCI rail. \nThis is the default value for real Macs but does not always work on a hackintosh. \nThe difference is clear: a hackintosh additionally has a PS2 controller, \nwhich may prevent rebooting, if not disabled.\nLast but not least you can set them to 0x0/0x0 to allow the use of default FACP values. \nIf not present, the default values states above will be used instead."; ObjectID = "NVX-g4-ytQ"; */
"NVX-g4-ytQ.ibShadowedToolTip" = "<key>ResetValue</key>
<string>0x06</string>
과
<key>ResetAddress</key>
<string>0x0CF9</string>

이 두 매개 변수는 다시 시작을 수정하는 매우 중요한 용도로 사용 됩니다
이 값은 이론적으로 FADT 테이블에 있어야하지만 항상 그런 것은 아닙니다
또한, FADT는 요구되는 것보다 짧을 수 있고 전혀 포함하지 않을 수도 있습니다
기본값은 0x64 / 0xFE이며 이는 PS2 컨트롤러를 통해 다시 시작 함을 의미 합니다
그러나 이것은 모든 시스템에서 작동하지 않으며 0x0CF9 / 0x06을 대신 사용할 수 있습니다
이는 PCI 레일을 통한 재시작을 나타냅니다
이것은 실제 Mac의 기본값이지만 해킨토시에서는 항상 작동하지 않습니다
그 차이점은 분명 합니다 hackintosh에는 PS2 컨트롤러가 추가로 있습니다
비활성화되지 않은 경우 재부팅을 방지 할 수 있습니다.
마지막으로 중요한 FACP 값을 사용할 수 있도록 0x0 / 0x0로 설정할 수 있습니다
존재하지 않을 경우 위의 기본값을 대신 사용 합니다";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>MinMultiplier</key>\n<integer>7</integer>\nMinimal CPU multiplier. Usually a value of 16 is ported, resulting in a frequency of 1600 MHz but you should use lower values when using SpeedStep, like 8 or even 7."; ObjectID = "O2a-KC-DUs"; */
"O2a-KC-DUs.ibShadowedToolTip" = "<key>MinMultiplier</key>
<integer>7</integer>
최소 CPU 배율을 설정 합니다 일반적으로 16의 값이 이식되어 1600 MHz의 주파수가되지만 스피드스텝을 사용할 때 8 또는 7과 같이 더 낮은 값을 사용해야 합니다";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>Name</key>\n<string>DSDT.aml</string>\n\nFile name of the binary DSDT file to load and inject."; ObjectID = "O7A-vf-aOw"; */
"O7A-vf-aOw.ibShadowedToolTip" = "<key>Name</key>
<string>DSDT.aml</string>

로드 및 인젝션 할 바이너리 DSDT 파일의 이름입니다";

/* Class = "NSButton"; ibShadowedToolTip = "This parameter affects the power profile, which will be written into table FADT.\n\nValue|Type|Power supply type :---|:---|:--- 1|Desktop|AC 2|Mobile|Battery 3|Server|SmartUPS\n\nClover will choose between 1 and 2 according to the mobility bit \nand according to the Mobile parameter in SMBIOS. \nIt is, for example, possible to fake a mobile MacMini. \nValue 3 will be chosen if this parameter is enabled."; ObjectID = "oer-mY-NZs"; */
"oer-mY-NZs.ibShadowedToolTip" = "이 매개 변수는 전원 프로파일에 영향을 미치며 FADT 테이블에 기록 됩니다

값 | 유형 | 전원 공급 장치 유형 : — | : — | : — 1 | 데스크탑 | AC 2 | 모바일 | 배터리 3 | 서버 | SmartUPS

클로버는 이동성 비트에 따라 1과 2 중 하나를 선택 합니다
SMBIOS의 Mobile 매개 변수에 따라 결정 됩니다
예를 들어, 모바일 Mac mini를 가짜로 만들 수 있습니다
이 매개 변수를 사용하면 값 3이 선택 됩니다";

/* Class = "NSButton"; ibShadowedToolTip = "Adds initialization for IDE controllers (not SATA) to prevent panic with it."; ObjectID = "oh7-T6-pIG"; */
"oh7-T6-pIG.ibShadowedToolTip" = "IDE 컨트롤러 (SATA가 아님)에 초기화를 추가하여 패닉이 발생하지 않도록 합니다";

/* Class = "NSTableView"; ibShadowedToolTip = "<key>DropTables</key>\n<array>\n  <dict>\n    <key>Signature</key>\n    <string>SSDT</string>\n    <key>TableId</key>\n    <string>SataTabl</string>\n  </dict>\n  <dict>\n    <key>Signature</key>\n    <string>SSDT</string>\n    <key>TableId</key>\n    <string>SataAddr</string>\n  </dict>\n  <dict>\n    <key>Signature</key>\n    <string>BGRT</string>\n  </dict>\n  <dict>\n    <key>TableId</key>\n    <string>A M I</string> (WARNING: DO NOT DO THIS!!!!!!!)\n  </dict>\n  ...\n</array>\nDrop OEM ACPI tables by signature and/or table identifier.\n\nAdditionally, now you can drop tables by their length. Why? Because we found Acer laptop where all SSDT have the same TableID.\n\n<key>DropTables</key>\n<array>\n  <dict>\n    <key>Signature</key>\n    <string>SSDT</string>\n    <key>Length</key>\n    <integer>720</integer>\n  </dict>\n</array>"; ObjectID = "OLn-tS-JOF"; */
"OLn-tS-JOF.ibShadowedToolTip" = "<key>DropTables</key>
<array>
  <dict>
    <key>Signature</key>
    <string>SSDT</string>
    <key>TableId</key>
    <string>SataTabl</string>
  </dict>
  <dict>
    <key>Signature</key>
    <string>SSDT</string>
    <key>TableId</key>
    <string>SataAddr</string>
  </dict>
  <dict>
    <key>Signature</key>
    <string>BGRT</string>
  </dict>
  <dict>
    <key>TableId</key>
    <string>A M I</string> (WARNING: DO NOT DO THIS!!!!!!!)
  </dict>
  …
</array>
서명 및 테이블 식별자별로 OEM ACPI 테이블을 삭제합니다

또한 모든 테이블 ID가 동일한 Acer 랩탑 덕분에 이제 테이블 길이를 줄일 수 있습니다 

<key>DropTables</key>
<array>
  <dict>
    <key>Signature</key>
    <string>SSDT</string>
    <key>Length</key>
    <integer>720</integer>
  </dict>
</array>";

/* Class = "NSTableView"; ibShadowedToolTip = "May you need to load your acpi tables in a certain order after\ndropping, load, disable.. some of it."; ObjectID = "OtX-jG-4Xq"; */
"OtX-jG-4Xq.ibShadowedToolTip" = "드롭 다운,로드, 비활성화 한 후에
특정 순서로 ACPI 테이블을로드해야합니다.";

/* Class = "NSTableView"; ibShadowedToolTip = "Disable the specified aml table."; ObjectID = "QNa-bM-Ygz"; */
"QNa-bM-Ygz.ibShadowedToolTip" = "지정된 aml 테이블 비활성";

/* Class = "NSButton"; ibShadowedToolTip = "Adds device Firewire into DSDT if absent and if the device really present. \nSafe."; ObjectID = "Rc4-tj-8Rc"; */
"Rc4-tj-8Rc.ibShadowedToolTip" = "DSDT에 장치 Firewire를 추가합니다 (장치가 실제로없는 경우)";

/* Class = "NSBox"; ibShadowedToolTip = "<key>SSDT</key>\n<dict>\n...\n</dict>\nParameter group affecting SSDTs."; ObjectID = "RCR-Ih-qYY"; */
"RCR-Ih-qYY.ibShadowedToolTip" = "<key>SSDT</key>
<dict>
…
</dict>
SSDT에 영향을주는 매개 변수 그룹";

/* Class = "NSButton"; ibShadowedToolTip = "Some systems can either be started using the kernel parameter cpus=1, \nor by using a patched kernel (Lapic NMI). \nIt turns out that in these case the table MADT is incomplete and missing the NMI section. \nEnabling this parameter will cause Clover to automatically correct this table. \nIf the table already is complete, then nothing will be changed."; ObjectID = "RTx-HB-nsm"; */
"RTx-HB-nsm.ibShadowedToolTip" = "일부 시스템은 커널 매개 변수 cpus=1을 사용하여 시작할 수도 있고,
또는 패치 된 커널 (Lapic NMI)을 사용 합니다
이 경우 MADT 테이블이 불완전하고 NMI 섹션이 누락 된 것으로 나타났습니다
이 매개 변수를 사용하면 클로버가이 테이블을 자동으로 수정 합니다
테이블이 이미 완료되면 어떤 내용도 변경되지 않습니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>AddDTGP</key>\n<true/>\n\nInserts Method (DTGP) into DSDT. It is required for _DSM methods, \nso if you use some other DSDT fix to inject device properties \nthen you must enable this. \nNo sense to use this method without other fixes."; ObjectID = "RzO-D2-a3y"; */
"RzO-D2-a3y.ibShadowedToolTip" = "<key>AddDTGP</key>
<true/>

메서드 (DTGP)를 DSDT에 인젝션 합니다 _DSM 메서드에 필요 합니다
그래서 다른 DSDT 수정을 사용하여 장치 속성을 인젝션 하는 경우
당신은 이것을 활성화 해야 합니다
다른 수정없이 이 방법을 사용하는 것은 의미가 없습니다";

/* Class = "NSComboBox"; ibShadowedToolTip = "Changes the type of power management plugin your system will use. \nPossible values are: \n\n* 0 - ACPI_SMC_PlatformPlugin will be used \n* 1 - X86PlatformPlugin will be used. Select for Ivy Bridge +"; ObjectID = "Rzw-9e-3NX"; */
"Rzw-9e-3NX.ibShadowedToolTip" = "시스템에서 사용할 전원 관리 플러그인의 유형을 변경 합니다
가능한 값은 다음과 같습니다

* 0 - ACPI_SMC_PlatformPlugin이 사용 됩니다
* 1 - X86PlatformPlugin이 사용됩니다. Ivy Bridge 이상 CPU는 선택해 주세요";

/* Class = "NSButton"; ibShadowedToolTip = "Inserts APSN to CpuPm SSDT"; ObjectID = "sDY-89-f8k"; */
"sDY-89-f8k.ibShadowedToolTip" = "CpuPm SSDT에 APSN을 인젝션 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>ReuseFFFF</key>\n<true>\nSome OEM DSDT contains some device with Name (_ADR, 0xFFFF). This is a big problem as I can convert it to ADR=0 and inject properties but this is dangerous patch, it may lead to panic on IOPCIFamily.kext. So this key is proposed which will convert this device to (ADR, 0) and reused for injection. (FakeID for example)"; ObjectID = "sgl-xT-Xbu"; */
"sgl-xT-Xbu.ibShadowedToolTip" = "<key> ReuseFFFF </ key>
<true>
일부 OEM DSDT에는 이름 (_ADR, 0xFFFF)이있는 장치가 들어 있습니다 이것은 ADR=0으로 변환하고 속성을 인젝션 할 수 있기 때문에 큰 문제 입니다하지만 위험한 패치 이므로 IOPCIFamily.kext에서 패닉이 발생할 수 있습니다. 따라서이 장치를 (ADR, 0)으로 변환하고 인젝션을 위해 재사용 할 수있는이 키가 제안되었습니다. (예 : FakeID)";

/* Class = "NSButton"; ibShadowedToolTip = "Excludes IRQ(8) from TMR device. \nThis is an ancient DOS device and is not needed in modern computers."; ObjectID = "SvT-dN-vk7"; */
"SvT-dN-vk7.ibShadowedToolTip" = "TMR 장치에서 IRQ (8)를 제외 합니다
이것은 고전적인 DOS 장치이며 현대 컴퓨터에는 필요하지 않습니다";

/* Class = "NSTableView"; ibShadowedToolTip = "More exact renaming Devices in DSDT and SSDT taking into account its bridge.\nExample: \n<key>ACPI</key>\n\t<dict>\n\t\t<key>RenameDevices</key>\n\t\t<dict>\n\t\t\t<key>_SB.PCI0.RP02.PSXS</key>\n\t\t\t<string>ARPT</string>\n\t\t\t<key>_SB.PCI0.EHC1</key>\n\t\t\t<string>EH01</string>\n\t\t\t<key>_SB.PCI0.POP2.PEGP</key>\n\t\t\t<string>GFX0</string>\n\t\t</dict>\nComplex case such as this DSDT is also taken into account.\nExample:\n_SB.PCI0.RP02.PSXS\nWe have to take into account fields like\nScope(\\_SB)\n{\n  Device (PCI0)\n  {\n    Device(RP02)\n    {\n      Device(PSXS)  <- to patch\n      {\n\t\tMethod(_ON)\n\t\t{\n\t\t}\n\t\tMethod(_OFF)\n\t\t{\n\t\t}\n\n\t  }\n\t  PSXS._ON() <- to patch\n\t}\n\tScope(RP02)\n\t{\n\t  PSXS._OFF() <- to patch\n\t}\n\tDevice(RP03)\n\t{\n\t  Device(PSXS) <- to not patch\n\t  {\n\t  }\n\t  PSXS._ON() <- to not patch\n\t}"; ObjectID = "sXu-RZ-a8b"; */
"sXu-RZ-a8b.ibShadowedToolTip" = "DSDT 및 SSDT에서 장치의 이름을 더 정확하게 바꾸는 것은 PCI 브릿지를 고려 합니다
예:
<key> ACPI </ key>
<dict>
<key> RenameDevices </ key>
<dict>
<key> _SB.PCI0.RP02.PSXS </ key>
<string> ARPT </ string>
<key> _SB.PCI0.EHC1 </ key>
<string> EH01 </ string>
<key> _SB.PCI0.POP2.PEGP </ key>
<string> GFX0 </ string>
</ dict>
이 DSDT와 같은 복잡한 경우도 고려 됩니다
예:
_SB.PCI0.RP02.PSXS

우리는 다음과 같은 분야를 고려 해야 합니다
Scope (\ _SB)
{
  Device (PCI0)
  {
    Device (RP02)
    {
      Device (PSXS) < 패치
      {
Method (_ON)
{
}
Method (_OFF)
{
}

}
패치하려면 PSXS._ON () <-
}
Scope (RP02)
{
PSXS._OFF () <- 패치
}
Device (RP03)
{
Device (PSXS) < 패치하지 않음
{
}
PSXS._ON () < 패치하지 않음
}";

/* Class = "NSButton"; ibShadowedToolTip = "Some OperationRegions in Bios DSDT are floating and values \nmay change in time due to changes in the BIOS. \nThe presence of floating regions makes it impossible \nto use a custom DSDT because this region may be shifted \nand will not correspond to the current state. \nThis patch is intended to find all such regions in BIOS and correct them in custom DSDT."; ObjectID = "TDb-hX-ayw"; */
"TDb-hX-ayw.ibShadowedToolTip" = "Bios DSDT의 일부 OperationRegions은 부동 및 값 입니다
BIOS 변경으로 인해 시간이 변경 될 수 있지만
플로팅된 영역이 있으므로 불가능 합니다
이 영역이 이동 될 수 있기 때문에 사용자 정의 DSDT를 사용하게 됩니다
그리고 현재 상태와 일치하지 않을겁니다
이 패치는 BIOS의 모든 영역을 찾아서 사용자 정의 DSDT에서 수정하도록 고안 되었습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Adds If(arg=5){} to method _PTS. \nThis trick may repair shutdown problems for some systems (like ASUS)."; ObjectID = "Tui-lw-gUI"; */
"Tui-lw-gUI.ibShadowedToolTip" = "If (arg = 5) {}를 _PTS 메서드에 추가 합니다
이 트릭은 일부 시스템 (예 : ASUS)의 종료 문제를 복구 할 수 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "The ACPI runtime in macOS/OS X does not work correctly with Mutex objects with a non-zero SyncLevel, even when used in a valid scenario.\nSuch Mutex definions must be changed to use SyncLevel 0.\nThe FixMutex feature is an easy way to fix all of them in DSDT."; ObjectID = "TxV-JD-sjp"; */
"TxV-JD-sjp.ibShadowedToolTip" = "유효한 시나리오에서 사용되는 경우에도 0이 아닌 SyncLevel이있는 Mutex 객체에서는 macOS / OS X의 ACPI 런타임이 올바르게 작동하지 않습니다
이러한 뮤텍스 정의는 SyncLevel 0을 사용하도록 변경해야 합니다
FixMutex 기능은 DSDT에서 모든 것을 고칠 수있는 쉬운 방법 입니다";

/* Class = "NSButton"; ibShadowedToolTip = "Adds the HDAU device if absent, with some default properties."; ObjectID = "Ue7-vJ-xDA"; */
"Ue7-vJ-xDA.ibShadowedToolTip" = "HDAU 장치가없는 경우 기본 특성을 사용하여 HDAU 장치를 추가 합니다";

/* Class = "NSBox"; ibShadowedToolTip = "Generate an SSDT with p-states and c-states."; ObjectID = "UWH-j3-WaF"; */
"UWH-j3-WaF.ibShadowedToolTip" = "p-states 및 c-state로 SSDT를 생성 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "The device PNLF is necessary to have brightness control. \nThis patch is also a good influence for proper Sleep/Wake."; ObjectID = "UYl-1m-Lpa"; */
"UYl-1m-Lpa.ibShadowedToolTip" = "PNLF 장치는 밝기 제어가 필요 합니다
이 패치는 적절한 잠자 / 깨우기에 좋은 영향을 미칩니다";

/* Class = "NSButton"; ibShadowedToolTip = "Deletes devices like Floppy drive, \nLPT port and others from the DSDT."; ObjectID = "VoS-Bu-03Y"; */
"VoS-Bu-03Y.ibShadowedToolTip" = "플로피 드라이브, LPT 포트 및 기타 장치를 DSDT에서 삭제 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>NoOemTableId</key>\n<true/>\n\nTo disable OEM table ID on ACPI/orgin/SSDT file names"; ObjectID = "vwy-Cc-5SB"; */
"vwy-Cc-5SB.ibShadowedToolTip" = "<key> NoOemTableId </ key>
<true />

ACPI/orgin/SSDT 파일 이름에서 OEM 테이블 ID를 사용하지 않기위해 사용 합니다";

/* Class = "NSTextFieldCell"; placeholderString = "hex or number"; ObjectID = "W3Q-9f-gWQ"; */
"W3Q-9f-gWQ.placeholderString" = "16진수 또는 숫자";

/* Class = "NSTableColumn"; headerCell.title = "Type/key"; ObjectID = "WtF-Ra-tyb"; */
"WtF-Ra-tyb.headerCell.title" = "유형 / 키";

/* Class = "NSTableColumn"; headerToolTip = "Type/key"; ObjectID = "WtF-Ra-tyb"; */
"WtF-Ra-tyb.headerToolTip" = "유형 / 키";

/* Class = "NSButton"; ibShadowedToolTip = "Also resolves some Sleep/Wake problems by correcting _S3D methods."; ObjectID = "wX2-H5-kub"; */
"wX2-H5-kub.ibShadowedToolTip" = "_S3D 메소드를 수정하여 잠자 / 깨우기 문제를 해결 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>EnableC2</key>\n<true/>\nThis key allows you to enable the C2 states generator. Disabled by default."; ObjectID = "WzK-0m-RGZ"; */
"WzK-0m-RGZ.ibShadowedToolTip" = "<key> EnableC2 </ key>
<true />
이 키를 사용하면 C2 상태 생성기를 활성화 할 수 있습니다 기본적으로 사용하지 않도록 설정되어 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Renames AZAL to HDEF or HDAU. Adds the HMDI device if absent. \nElse AppleHDA will not work. Adds the properties \"layout-id\", \n\"MaximumBootBeepVolume\" and \"PinConfigurations\"."; ObjectID = "xf1-lI-6p1"; */
"xf1-lI-6p1.ibShadowedToolTip" = "AZAL을 HDEF 또는 HDAU로 이름을 바꿉니다. HMDI 장치가 없으면 추가 합니다
Else AppleHDA는 작동하지 않습니다. “layout-id”, “MaximumBootBeepVolume”및 “PinConfigurations” 속성을 추가 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>EnableC6</key>\n<true/>\nThis key allows you to enable the C6 states generator."; ObjectID = "xYb-XE-RHK"; */
"xYb-XE-RHK.ibShadowedToolTip" = "<key> EnableC6 </ key>
<true />
이 키를 사용하면 C6 상태 생성기를 활성화 할 수 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>EnableC7</key>\n<true/>\nThis key allows you to enable the C7 states generator. Disabled by default."; ObjectID = "XZZ-cF-eTb"; */
"XZZ-cF-eTb.ibShadowedToolTip" = "<key>EnableC7</key>
<true/>
이 키를 사용하면 C7 상태 생성기를 활성화 할 수 있습니다 기본적으로 사용하지 않도록 설정되어 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Generate</key>\n<dict>\n  <key>CStates</key>\n  <true/>\n</dict>\nAutomatic SSDT table generation, which extends the processor section with _CST methods for each core. _CST generation is affected by parameters EnableC2, EnableC4, EnableC6, EnableISS, C3Latency. There is no need to comment them as everything will work either way. Experiment by yourself.\nBesides, Clover already has obtained the processor type and core count.\nNot using this parameter will result in following error message: ACPI_SMC_PlatformPlugin::pushCPU_CSTData - _CST evaluation failed."; ObjectID = "YGh-aR-Qpu"; */
"YGh-aR-Qpu.ibShadowedToolTip" = "<key>Generate</key>
<dict>
  <key>CStates</key>
  <true/>
</dict>
각 코어에 대해 _CST 메서드로 프로세서 섹션을 확장하는 자동 SSDT 테이블 생성을 진행합니다 _CST 생성은 EnableC2, EnableC4, EnableC6, EnableISS, C3Latency 매개 변수의 영향을 받습니다 모든 것이 어느쪽으로 든 작동 하므로 주석을 달 필요가 없습니다 한 번 실험해 보세요
게다가 클로버는 이미 프로세서 유형과 코어 수를 부팅시 자동으로 인식 합니다";

/* Class = "NSButton"; ibShadowedToolTip = "Injects USB devices and their properties for USB-1, \nUSB-2 and USB-3. No reason not to use this bit."; ObjectID = "yqA-Z1-Xka"; */
"yqA-Z1-Xka.ibShadowedToolTip" = "USB 장치 및 해당 속성을 USB-1 USB-2 및 USB-3으로 인젝션 합니다
이 비트를 사용하지 않을 이유가 없습니다";

/* Class = "NSMenuItem"; title = "List Of Patches"; ObjectID = "yqg-Tz-OBP"; */
"yqg-Tz-OBP.title" = "패치 사전 설정 목록";

/* Class = "NSTabView"; ibShadowedToolTip = "This parameter represents a whole set of DSDT patches \nwhich can be activated individually. "; ObjectID = "zlp-4F-eaR"; */
"zlp-4F-eaR.ibShadowedToolTip" = "이 매개 변수는 전체 DSDT 패치 세트를 나타냅니다
개별적으로 활성화 할 수 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Deletes IRQ(2) from device IPIC. Helps with a non working Power button."; ObjectID = "Znz-uO-BAw"; */
"Znz-uO-BAw.ibShadowedToolTip" = "장치 IPIC에서 IRQ (2)를 삭제합니다. 작동하지 않는 전원 버튼을 동작하게 만들 수 있습니다";

/* Class = "NSButton"; ibShadowedToolTip = "Dynamic SSDTs confuse users and are amost never needed.  Added an option to config.plist to disable extraction of them via Clover F4 (default is false)."; ObjectID = "Zpr-zM-4bX"; */
"Zpr-zM-4bX.ibShadowedToolTip" = "동적 SSDT는 사용자를 혼란스럽게 하므로 크게 필요하지 않습니다 클로버 F4 (기본값은 false)를 통해 config.plist를 추출 할 수 없도록 옵션을 추가 했습니다";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Rtc8Allowed</key>\n<false>\nSome users claim that RTC length may be 8 bytes without CMOS reset, but others claim that the reset is still occurring. For those who wants len=8 it should be set to true. Default is false."; ObjectID = "ZUY-vA-984"; */
"ZUY-vA-984.ibShadowedToolTip" = "<key>Rtc8Allowed</key>
<false>
일부 사용자는 RTC 길이가 CMOS 리셋없이 8 바이트가 될 수 있다고 주장하지만 다른 사람들은 리셋이 여전히 발생한다고 주장 합니다 len = 8을 원한다면 true로 설정해야합니다 기본값은 false입니다.";

