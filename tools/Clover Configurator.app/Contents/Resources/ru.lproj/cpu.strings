/* Class = "NSTextField"; ibShadowedToolTip = "<key>Type</key>\n<string>0x0201</string>\nThis result of this value can only be found in Apple's specification and it is used in the window About this Mac, which is displaying the according processor name. Otherwise \"Unknown CPU\" will be displayed. An invocation of CPUID was not possible due to PowerPC and due to Apple's different view of the world SMBIOS table 4 is not used either. Clover knows most values but due to the fact that hardware development does not stand still, you can specify this value. Again, this is purely cosmetic."; ObjectID = "4Pm-s4-81X"; */
"4Pm-s4-81X.ibShadowedToolTip" = "Этот параметр придуман Apple и используется в окошке «Об этом Маке», внутренними средствами переводящим такую константу в обозначение процессора. Иначе будет показан «Неизвестный процессор». Почему нельзя было вызвать CPUID? Потому что был еще PowerPC. Ну или в SMBIOS посмотреть в таблице 4? Нет, у Эппл свое мировоззрение, а нам приходится приспосабливаться, какой процессор как зашифрован. В основном Кловер знает все шифры, но, поскольку прогресс не стоит на месте, то оставлена возможность вручную изменить этот параметр. Правильность установки этого параметра контролируется в окошке «Об этом Mac». Опять-таки, косметика чистой воды.";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>SavingMode</key>\n<string>0x1B0</string>\n\nCPU feature which lets system software to set\nEnergy Performance Preference (IA32_ENERGY_PERF_BIAS MSR)."; ObjectID = "6pN-Sk-cjc"; */
"6pN-Sk-cjc.ibShadowedToolTip" = "<key>SavingMode</key><string>0x1B0</string>Функция CPU которая позволяет системному ПО настраивать Energy Performance Preference (IA32_ENERGY_PERF_BIAS MSR).";

/* Class = "NSButton"; ibShadowedToolTip = "Enable C6 state."; ObjectID = "cNv-tV-dVt"; */
"cNv-tV-dVt.ibShadowedToolTip" = "Включить C6 State";

/* Class = "NSBox"; title = "Skylake settings"; ObjectID = "FVq-NB-BQM"; */
"FVq-NB-BQM.title" = "Настройки для Skylake";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>BusSpeedkHz</key>\n<string>133330</string>\nBus speed in kHz. Very important value for a stable system. It is passed from the boot loader to the kernel. If this value is not correct, the kernel will not start at all. If it is slightly incorrect, clock issues may arise and the system will behave in a strange way.\n\nAn automatic detection was introduced with revision 1060, which relies on the ACPI timer producing much more accurate values than the ones stored in DMI.\n\nDMI stores this value in MHz, which is not accurate in contrast to a value calculated from CPU frequency. You can choose a more accurate value, if needed. For example my DMI has a value of 100 MHz, however manually overriding it to a value of 99790 kHz produced better clocks.\nSome vendors use a different meaning for BusSpeed and FSBSpeed and use values four times bigger in the BIOS. You can distinguish them according to the scale: either it is from 100 MHz to 400 MHz or it matches the formula CPUFrequency=RailFrequency*CPUMultiplier.\nIf ASUS uses a rail frequency of 1600 MHz and a multiplier of 8, the formula does not work - a CPU with 12,8 GHz does not exist; a division into 4 is required.\n\nAttention: UEFI booting will produce an inaccurate value. It is recommended manually specify the value, which is calculated more accurately during a boot with Clover EFI."; ObjectID = "IaF-Qk-1r3"; */
"IaF-Qk-1r3.ibShadowedToolTip" = "Этот параметр – базовая частота шины, является критически важной для работы системы, и передается из загрузчика в ядро. Если частота неправильная, ядро вообще не запускается, если частота немного не соответствует, могут возникнуть проблемы с часами, и очень странное поведение системы. Значение в DMI хранится в МГц, и это неточно, более правильно вычисленное из частоты CPU, ну а вы можете подобрать свое значение более точно, и прописать его в этом ключе в КГц. К примеру, у меня в ДМИ написано 100МГц, а для часов лучше стало, когда я прописал 99790кГц. Один момент. Некоторые производители имеют другое понятие, что есть BusSpeed, а что есть FSBSpeed, и вписывают в BIOS значение в четыре раза больше. Разобраться в правильности можно по диапазону: оно должно быть от 100 до 400МГц, либо по формуле ЧастотаCPU=ЧастотаШины*МножительCPU. Понятно, что если ASUS пишет частоту шины 1600МГц, да множитель процессора 8, то формула не сойдется, процессоров на 12,8ГГц не существует. Реально надо делить на 4. Начиная с ревизии 1060 имеется автодетект частоты основанный на ACPI таймере, и эти значения он вычисляет лучше, чем прописано в DMI.";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>Latency</key>\n<string>0x03E9</string>\nThis parameter value represents the C3 entry latency issued when entering C3 state. The critical value is 0x3E8(1000). A lower value will allow SpeedStep, a higher one will not allow it. Real Macs always use 0x3E9, meaning SpeedStep is not turned on. Decide for yourself what you need.\nNotebook users should use 0x00FA to enable power management."; ObjectID = "Idz-qn-n5F"; */
"Idz-qn-n5F.ibShadowedToolTip" = "<key>Latency</key><string>0x03E9</string>Это задержка на включение C3 state. Критическое значение 0x3E8=1000. Меньше — включается спидстеп, больше — не включается. На нативниках всегда 0x03E9, то есть спидстеп не работает. На Хаках приходится выбирать, что мы хотим, быть похожим на нативника, или включить управление питанием. Для ноутбуков — 0x00FA.";

/* Class = "NSTextFieldCell"; placeholderString = "hex or number"; ObjectID = "KCy-ek-uRe"; */
"KCy-ek-uRe.placeholderString" = "HEX или число";

/* Class = "NSButton"; ibShadowedToolTip = "Enable C4 state."; ObjectID = "KXW-Lp-WEJ"; */
"KXW-Lp-WEJ.ibShadowedToolTip" = "Включить C4 State";

/* Class = "NSButton"; ibShadowedToolTip = "Disable Intel Turbo"; ObjectID = "QUJ-Ig-4Pe"; */
"QUJ-Ig-4Pe.ibShadowedToolTip" = "Выключить Intel Turbo";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>FrequencyMHz</key>\n<string>3200</string>\nCPU base frequency in MHz. Usually Clover will get it from DMI, however if it is not accurate, you can override it. A wrong value can cause system instability - synchronisation issues, slowness etc. It is recommended not use this parameter at all.\n\nMost probably this parameter will be excluded in coming revisions due to its dangerous and harmful nature."; ObjectID = "rMT-iB-J9F"; */
"rMT-iB-J9F.ibShadowedToolTip" = "Базовая частота процессора в МГц. Обычно Кловер получает это значение путем калькуляции на основе ACPI таймера, но если получится неверно, можно подставить через этот ключ. Этот ключ влияет исключительно на цифру в систем-профайлере. Косметика!";

/* Class = "NSButton"; ibShadowedToolTip = "HARDWARE-CONTROLLED PERFORMANCE STATES (Skylake +). When HWP is enabled, the processor autonomously selects performance states as deemed appropriate for the applied workload and with consideration of constraining hints that are programmed by the OS. These OS-provided hints include minimum and maximum performance limits, preference towards energy efficiency or performance, and the specification of a relevant workload history observation time window. The means for the OS to override HWP's autonomous selection of performance state with a specific desired performance target is also provided, however, the effective frequency delivered is subject to the result of energy efficiency and performance optimizations"; ObjectID = "rYB-Nu-ozx"; */
"rYB-Nu-ozx.ibShadowedToolTip" = "Hardware-controlled perfoemance states (Skylake+). Когда HWP включено, CPU автоматически выбирает частоту для работы, учитывая нагрузку и с помощью OS. OS \"подсказывает\" максимальную и минимальную частоты, настройки экономии энергии. Таким образом, операционная система имеет куда более расширенную возможность управлять производительностью и энергоэффетивностью.";

/* Class = "NSTextField"; ibShadowedToolTip = "Set HWP configuration (take the form of: 0xXXXXXXXX). You can use the dedicated converter to set power management and min/max frequency. Any OC may be set in bios first."; ObjectID = "SLR-80-5iW"; */
"SLR-80-5iW.ibShadowedToolTip" = "Настройка конфигурации HWP  (take the form of: 0xXXXXXXXX). Вы можете использовать конвертер для вычисления минимальной/максимальной частоты для правильного управления питанием. Любая OS может стоять в BIOS первой.";

/* Class = "NSButton"; ibShadowedToolTip = "Enable C2 state."; ObjectID = "TG2-vd-PlM"; */
"TG2-vd-PlM.ibShadowedToolTip" = "Включить C2 State";

/* Class = "NSButton"; ibShadowedToolTip = "A possibility to not inject ARTFrequency introduced by rev 3356 if calculated value is not good somehow"; ObjectID = "VCy-7e-J2B"; */
"VCy-7e-J2B.ibShadowedToolTip" = "Возможность не инжектировать ARTFrequency, представленный в ревизии 3356, если вычисленное значение некорректно.";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>QPI</key>\n<string>4800</string>\nSystem Profiler calls it Processor Bus Speed or Bus Speed. Chameleon has an algorithm for calculating this value for Nehalem CPUs (, which is however not correct). Clover has a corrected algorithm according to Intel data sheets. AppleSmbios sources describe two variants: either SMBIOS already contains this value as specified by the vendor, or it is calculated by the formulae BusSpeed*4. After a long argument this value was sourced into the configuration file - write what you want (in MHz). This is a purely cosmetic value. Apparently this value only makes sense for Nehalems, the rest should use the formula stated above - or nothing at all.\n\nNote: Real Mac’s report a hw.busfrequency = 100000000\n\nTo achieve that with Clover here’s what to do:\n1 - Drop SMBIOS table type 132 for Sandy Bridge and newer CPU’s. Clover does this if you set QPI to a string value of 0.\n2 - Set SMBIOS table type 4->ExternalClock to 0 (or 25Mhz as a real Mac). This currently has to be done in the source code and re-compile Clover.\n\nIf you don’t do step 2 then for Sandy Bridge and newer CPU’s, AppleSMBIOS.kext will multiply any non zero values reported by SMBIOS table type 4 -> External Clock by 4"; ObjectID = "Xgc-vE-b48"; */
"Xgc-vE-b48.ibShadowedToolTip" = "В системном профайлере эта величина называется Processor Bus Speed или просто Bus Speed. В Хамелеоне есть алгоритм ее вычисления для процессоров семейства Nehalem (да и тот неправильный!). В Кловере сделан поправленный алгоритм по даташитам от Интел. В исходниках кекста AppleSmbios рассматриваются два варианта: либо значение уже прописано в SMBIOS, как там изготовитель прописал, либо просто вычисляется BusSpeed*4. После долгих споров эта величина вынесена в конфиг – пишите что вам нравится (МГц). На работу это никак не влияет – чистой воды косметика. По последним сведениям QPI имеет смысл только для Нехалемов, для всех остальных здесь необходимо иметь BusSpeed*4. Или вообще ничего.";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>TDP</key>\n<integer>55</integer>\n\nThermal Design Power: indicate the designated power in Watt."; ObjectID = "Xqk-hd-kSF"; */
"Xqk-hd-kSF.ibShadowedToolTip" = "<key>TDP</key><integer>55</integer>Это Thermal Design Power, учитывается в p-states при генерации таблиц Управления Питанием Процессора.";

/* Class = "NSButton"; ibShadowedToolTip = "Enable QEMU (Quick EMUlator)"; ObjectID = "zID-l3-npz"; */
"zID-l3-npz.ibShadowedToolTip" = "Включить QEMU (Quick EMUlator)";

